{"version":3,"sources":["../node_modules/jsdom/lib/jsdom sync","images/Zhangjiajie.jpg","images/Sang_Bui.jpg","Intro.js","Profile.js","Experiences.js","Skills.js","Education.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p","Intro","react_default","a","createElement","Fragment","style","backgroundImage","concat","Background","position","width","height","zIndex","reactstrap_es","backgroundSize","backgroundColor","marginBottom","display","flexDirection","justifyContent","color","fontSize","Profile","_ref","about","background","sm","md","lg","className","textIndent","src","SangBui","borderRadius","Experiences","experiencesView","experiences","map","_ref2","company","from","to","description","Skills","skills","languages","misc","join","Education","educationViews","education","school_name","year","degree","alignText","textAlign","moveIconLeft","marginRight","Footer","email","summary","linkedIn","github","href","build_default","icon","App","name","Resume","src_Intro","src_Profile","src_Experiences","src_Education","src_Skills","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b59b5540.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 244;","module.exports = __webpack_public_path__ + \"static/media/Zhangjiajie.6242ad4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sang_Bui.8ffef100.jpg\";","import React from 'react';\nimport { Jumbotron } from 'reactstrap';\n\nimport Background from './images/Zhangjiajie.jpg';\n\nconst Intro = () => (\n    <>\n        <section style={{\n            backgroundImage: `url(${Background})`,\n            position: \"fixed\",\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: \"-1\",\n        }}\n\n        />\n        <Jumbotron style={{\n            backgroundSize: \"cover\",\n            height: \"100vh\",\n            backgroundColor: \"rgb(0,0,0,0.5)\",\n            marginBottom: \"0\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n        }}>\n            <h2 style={{color: \"#22A39F\", fontSize: \"100px\"}}>Sang Bui</h2>\n        </Jumbotron>\n    </>\n);\n\nexport default Intro;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport SangBui from './images/Sang_Bui.jpg';\n\n\nconst Profile = ({about}) => (\n    <div style={{background: \"#F3EFE0\"}}>\n        <Container>\n            <h2>Profile</h2>\n            <hr />\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\n                    <h3>About me</h3>\n                    <p className=\"firstLetter\" style={{textIndent: \"40px\"}}>{about}</p>\n                </Col>\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\n                    <img src={SangBui} style={{width: \"100%\", borderRadius: \"50%\"}}/>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n);\n\nexport default Profile;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nconst Experiences = ({experiences})=> {\n    const experiencesView = experiences.map(({company, from, to, position, description}) => (\n        <Row>\n            <Col sm=\"12\" md=\"12\" lg=\"3\">\n                <h4>{company}</h4>\n                <p>{from} - {to}</p>\n            </Col>\n            <Col sm=\"12\" md=\"12\" lg=\"9\">\n                <h4>{position}</h4>\n                <p >{description}</p>\n            </Col>\n        </Row>\n    ));\n\n\n    return (\n        <div style={{backgroundColor: \"#FAFAFA\"}}>\n            <Container >\n                <h2>Experiences</h2>\n                <hr />\n                {experiencesView}\n            </Container>\n        </div>\n    )\n};\n\nexport default Experiences;\n\n\n\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Skills = ({skills}) => {\n    const { languages, misc } = skills;\n\n\n    return (\n        <div style={{backgroundColor: \"#FAFAFA\"}}>\n\n            <Container>\n                <h2>Skills</h2>\n                <hr />\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"3\">\n                        <h4>Languages:</h4>\n                        <p>{languages.join(\", \")}</p>\n                    </Col>\n                    <Col sm=\"12\" md=\"12\" lg=\"9\">\n                        <h4>Misc:</h4>\n                        <p>{misc.join(\", \")}</p>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Skills;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Education = ({education}) => {\n\n    const educationViews = education.map(({school_name, year, degree, description}) => (\n        <Row>\n            <Col sm=\"12\" md=\"12\" lg=\"3\">\n                <h4>{school_name}</h4>\n                <p>{year}</p>\n            </Col>\n            <Col sm=\"12\" md=\"12\" lg=\"9\">\n                <h4>{degree}</h4>\n                <p>{description}</p>\n            </Col>\n        </Row>\n    ));\n\n    return (\n        <div style={{background: \"#F3EFE0\"}}>\n            <Container>\n                <h2>Education</h2>\n                <hr />\n                {educationViews}\n            </Container>\n        </div>\n    )\n};\n\nexport default Education;","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport FeatherIcon from 'feather-icons-react';\n\nconst alignText = {\n    textAlign: \"center\"\n};\n\nconst moveIconLeft = {\n    marginRight: \"12px\",\n    marginBottom: \"4px\",\n}\n\nconst Footer = ({email, summary, linkedIn, github}) => (\n    <footer>\n        <Container>\n            <h2>Contact</h2>\n            <hr />\n            <Row style={{flexDirection: \"column\"}}>\n                <h4 style={alignText} >\n                    <a href={`mailto:${email}`} >\n                        <FeatherIcon icon=\"mail\" style={moveIconLeft}/>\n                        Email\n                    </a>\n                </h4>\n                <h4 style={alignText} >\n                    <a href={`${linkedIn}`}  >\n                        <FeatherIcon icon=\"linkedin\" style={moveIconLeft}/>\n                        LinkedIn\n                    </a>\n                </h4>\n                <h4 style={alignText} >\n                    <a href={`${github}`} >\n                        <FeatherIcon icon=\"github\" style={moveIconLeft}/>\n                        Github\n                    </a>\n                </h4>\n                <h3>Parting words</h3>\n                <p style={{color: \"white\", textIndent: \"40px\"}}>{summary}</p>\n            </Row>\n        </Container>\n\n    </footer>\n);\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles.css';\n\nimport Resume from './resume.json';\n\nimport Intro from './Intro';\nimport Profile from './Profile';\nimport Experiences from './Experiences';\nimport Skills from './Skills';\nimport Education from './Education';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n    render() {\n        const {\n            name,\n            about,\n            experiences,\n            education,\n            skills,\n            email, summary, linkedIn, github,\n        } = Resume;\n        return (\n            <>\n                <Intro name={name}/>\n                <Profile about={about}/>\n                <Experiences experiences={experiences} />\n                <Education education={education}/>\n                <Skills skills={skills}/>\n                <Footer email={email} summary={summary} linkedIn={linkedIn} github={github} />\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}